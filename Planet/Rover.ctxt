#BlueJ class context
comment0.target=Rover
comment0.text=\r\n\ Ein\ Rover\ ist\ ein\ Fahrzeug,\ dass\ sich\ auf\ einem\ Planeten\ bewegen\ und\ Gestein\ analysieren\ kann.\r\n
comment1.params=
comment1.target=Rover()
comment10.params=richtung\ wieOft
comment10.target=void\ drehe(java.lang.String,\ java.lang.Integer)
comment11.params=grad
comment11.target=void\ drehe(java.lang.Integer)
comment12.params=wieOft
comment12.target=void\ fahre(java.lang.Integer)
comment13.params=
comment13.target=void\ fahre()
comment13.text=\r\n\ Der\ Rover\ bewegt\ sich\ ein\ Feld\ in\ Fahrtrichtung\ weiter.\ \r\n\ Sollte\ sich\ in\ Fahrtrichtung\ ein\ Objekt\ der\ Klasse\ Huegel\ befinden\ oder\ er\ sich\ an\ der\ Grenze\ der\ Welt\ befinden,\r\n\ dann\ erscheint\ eine\ entsprechende\ Meldung\ auf\ dem\ Display.\r\n
comment14.params=richtung\ silent
comment14.target=void\ drehe(java.lang.String,\ java.lang.String)
comment14.text=\r\n\ Der\ Rover\ dreht\ sich\ um\ 90\ Grad\ in\ die\ Richtung,\ die\ mit\ richtung\ ("links"\ oder\ "rechts")\ \u00FCbergeben\ wurde.\r\n\ Sollte\ ein\ anderer\ Text\ (String)\ als\ "rechts"\ oder\ "links"\ \u00FCbergeben\ werden,\ dann\ erscheint\ eine\ entsprechende\ Meldung\ auf\ dem\ Display.\r\n
comment15.params=richtung
comment15.target=void\ drehe(java.lang.String)
comment16.params=
comment16.target=boolean\ gesteinVorhanden()
comment16.text=\r\n\ \ \ \ \ \ Der\ Rover\ gibt\ durch\ einen\ Wahrheitswert\ (true\ oder\ false)\ zur\u00FCck,\ ob\ sich\ auf\ seiner\ Position\ ein\ Objekt\ der\ Klasse\ Gestein\ befindet.\r\n\ \ \ \ \ \ Eine\ entsprechende\ Meldung\ erscheint\ auch\ auf\ dem\ Display.\r\n
comment17.params=silent
comment17.target=boolean\ gesteinVorhanden(java.lang.String)
comment18.params=delete
comment18.target=void\ analysiereGestein(java.lang.String)
comment18.text=\r\n\ Der\ Rover\ ermittelt\ den\ Wassergehalt\ des\ Gesteins\ auf\ seiner\ Position\ und\ gibt\ diesen\ auf\ dem\ Display\ aus.\r\n\ Sollte\ kein\ Objekt\ der\ Klasse\ Gestein\ vorhanden\ sein,\ dann\ erscheint\ eine\ entsprechende\ Meldung\ auf\ dem\ Display.\r\n
comment19.params=
comment19.target=void\ analysiereGestein()
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ In\ der\ Methode\ act\ k\u00F6nnen\ andere\ Methoden\ des\ Rovers\ angewendet\ werden.\r\n\ Die\ Methoden\ werden\ dann\ nacheinander\ ausgef\u00FChrt,\ wenn\ man\ nach\ dem\r\n\ Kompilieren\ den\ Act-Knopf\ dr\u00FCckt.\r\n
comment20.params=richtung
comment20.target=boolean\ huegelVorhanden(java.lang.String)
comment20.text=\r\n\ Der\ Rover\ \u00FCberpr\u00FCft,\ ob\ sich\ in\ richtung\ ("rechts",\ "links",\ oder\ "vorne")\ ein\ Objekt\ der\ Klasse\ Huegel\ befindet.\r\n\ Das\ Ergebnis\ wird\ auf\ dem\ Display\ angezeigt.\r\n\ Sollte\ ein\ anderer\ Text\ (String)\ als\ "rechts",\ "links"\ oder\ "vorne"\ \u00FCbergeben\ werden,\ dann\ erscheint\ eine\ entsprechende\ Meldung\ auf\ dem\ Display.\r\n
comment21.params=
comment21.target=void\ setzeMarke()
comment21.text=\r\n\ Der\ Rover\ erzeugt\ ein\ Objekt\ der\ Klasse\ "Marke"\ auf\ seiner\ Position.\r\n
comment22.params=
comment22.target=boolean\ markeVorhanden()
comment22.text=\r\n\ Der\ Rover\ gibt\ durch\ einen\ Wahrheitswert\ (true\ oder\ false)\ zur\u00FCck,\ ob\ sich\ auf\ seiner\ Position\ ein\ Objekt\ der\ Klasse\ Marke\ befindet.\r\n\ Eine\ entsprechende\ Meldung\ erscheint\ auch\ auf\ dem\ Display.\r\n
comment23.params=
comment23.target=void\ entferneMarke()
comment23.text=\r\n\ Falls\ an\ der\ Position\ des\ Rovers\ eine\ Markierung\ vorhanden\ ist,\ so\ entfernt\ er\ diese.\r\n
comment24.params=
comment24.target=void\ schalteDisplayAus()
comment24.text=\r\n\ Das\ Display\ des\ Rovers\ wird\ entfernt,\ d.\ h.\ gel\u00F6scht.\r\n
comment25.params=text
comment25.target=void\ nachricht(java.lang.String)
comment26.params=
comment26.target=java.lang.String\ ls()
comment27.params=world
comment27.target=void\ addedToWorld(greenfoot.World)
comment28.params=
comment28.target=void\ clearConsole()
comment3.params=Aufgabe
comment3.target=void\ Aufgabe(java.lang.String)
comment4.params=anzahl
comment4.target=void\ zuWaendenfahren(int)
comment5.params=richtung\ ende
comment5.target=void\ zurWandFahren(java.lang.String,\ java.lang.Boolean)
comment6.params=
comment6.target=void\ bisZurWandFahren()
comment7.params=
comment7.target=void\ linksUmHuegelFahren()
comment8.params=
comment8.target=void\ start()
comment9.params=
comment9.target=void\ end()
numComments=29
